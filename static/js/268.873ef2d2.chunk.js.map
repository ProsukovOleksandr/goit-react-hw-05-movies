{"version":3,"file":"static/js/268.873ef2d2.chunk.js","mappings":"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","sources":["components/Api.js","pages/MovieDetails/MovieGenreItem.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '4e3245caeda8ef69d01617b402f558a4';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport const getTrendingMovies = async () => {\n    const TRENDING_URL = `${BASE_URL}/trending/movie/day?api_key=${KEY}`;\n\n    try {\n        const response = await axios.get(TRENDING_URL);\n        return response.data;\n    } catch (error) {\n        alert(\"Oops, something went wrong...\");\n    }\n};\n\nexport const getQuerry = async (query) => {\n    const QUERRY_URL = `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`\n\n    try {\n        const response = await axios.get(QUERRY_URL);\n        return response.data;\n    } catch (error) {\n        alert(\"Oops, something went wrong...\");\n    }\n};\n\nexport const getMovieDetails = async (id) => {\n    const MOVIE_DETAILS_URL = `${BASE_URL}/movie/${id}?api_key=${KEY}`;\n\n    try {\n        const response = await axios.get(MOVIE_DETAILS_URL);\n        return response.data;\n    } catch (error) {\n        alert(\"Oops, something went wrong...\")\n    }\n};\n\nexport const getMovieCredits = async (id) => {\n    const MOVIE_CREDITS_URL = `${BASE_URL}/movie/${id}/credits?api_key=${KEY}`;\n\n    try {\n        const response = await axios.get(MOVIE_CREDITS_URL);\n        return response.data.cast;\n    } catch (error) {\n        alert(\"Oops, something went wrong...\")\n    }\n};\n\nexport const getMovieReview = async (id) => {\n    const MOVIE_REVIEW_URL = `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`;\n    \n    try {\n        const response = await axios.get(MOVIE_REVIEW_URL);\n        return response.data.results;\n    } catch (error) {\n        alert(\"Oops, something went wrong...\")\n    }\n};","import PropTypes from \"prop-types\";\nexport const MovieGenreItem = ({ genre }) => {\n  return <li>{genre.name}</li>;\n};\nMovieGenreItem.propTypes  = {\n  genre:  PropTypes.shape({\n    name: PropTypes.string\n  })\n}","import styled from \"@emotion/styled\";\nexport const StyledDiv = styled.div`\ndisplay:flex;\nflex-direction:row;\nmargin-top:30px;\ngap:30px\n`","import { getMovieDetails } from 'components/Api';\nimport { useEffect, useRef, useState } from 'react';\nimport { Routes, Route, Link, useParams, useLocation } from 'react-router-dom';\nimport { MovieGenreItem } from './MovieGenreItem';\nimport { lazy } from 'react';\nimport { StyledDiv } from './MovieDetails.styled';\nconst Cast = lazy(() => import('./Cast/Cast'));\nconst Reviews = lazy(() => import('./Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(movie => setMovie(movie))\n      .catch(error => setError(error.message));\n  }, [movieId]);\n  const { title, release_date, poster_path, vote_average, overview, genres } = movie;\n  return (\n    <>\n      <Link to={backLinkHref.current}>{'<--'}Go back</Link>\n        {error !== null && <p>Oops, something went wrong... Error: {error}</p>}\n        <StyledDiv>\n        <img\n          src={'http://image.tmdb.org/t/p/w500/' + poster_path}\n          alt={title}\n          width={400}\n          height={500}\n        />\n        <div>\n         <h3>\n          {title}({release_date})\n        </h3>\n        <span>User score: {Math.round(vote_average)}/10</span>\n        <h4>Overview</h4>\n        <p>{overview}</p>\n        <h4>Genres</h4>\n        <ul>\n          {Array.isArray(genres) &&\n            genres.map(gen => <MovieGenreItem genre={gen} key={gen.id} />)}\n        </ul>\n        </div>\n        </StyledDiv>\n      \n      <div>\n        <Link to=\"cast\">Cast</Link>\n      </div>\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n      </Routes>\n\n      <div>\n        <Link to=\"reviews\">Reviews</Link>\n      </div>\n      <Routes>\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["KEY","BASE_URL","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","TRENDING_URL","response","wrap","_context","prev","next","concat","axios","sent","abrupt","data","t0","alert","stop","apply","arguments","getQuerry","_ref2","_callee2","query","QUERRY_URL","_context2","_x","getMovieDetails","_ref3","_callee3","id","MOVIE_DETAILS_URL","_context3","_x2","getMovieCredits","_ref4","_callee4","MOVIE_CREDITS_URL","_context4","cast","_x3","getMovieReview","_ref5","_callee5","MOVIE_REVIEW_URL","_context5","results","_x4","MovieGenreItem","genre","_jsx","children","name","StyledDiv","styled","_templateObject","_taggedTemplateLiteral","Cast","lazy","Reviews","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","error","setError","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","then","catch","message","title","release_date","poster_path","vote_average","overview","genres","_jsxs","_Fragment","Link","to","current","src","alt","width","height","Math","round","Array","isArray","map","gen","Routes","Route","path","element"],"sourceRoot":""}