{"version":3,"file":"static/js/544.b22c5928.chunk.js","mappings":"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","sources":["components/Api.js","pages/Home/Home.jsx","pages/Home/Home.styled.jsx","pages/Home/TrendListItem.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '4e3245caeda8ef69d01617b402f558a4';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport const getTrendingMovies = async () => {\n    const TRENDING_URL = `${BASE_URL}/trending/movie/day?api_key=${KEY}`;\n\n    try {\n        const response = await axios.get(TRENDING_URL);\n        return response.data;\n    } catch (error) {\n        alert(\"Oops, something went wrong...\");\n    }\n};\n\nexport const getQuerry = async (query) => {\n    const QUERRY_URL = `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`\n\n    try {\n        const response = await axios.get(QUERRY_URL);\n        return response.data;\n    } catch (error) {\n        alert(\"Oops, something went wrong...\");\n    }\n};\n\nexport const getMovieDetails = async (id) => {\n    const MOVIE_DETAILS_URL = `${BASE_URL}/movie/${id}?api_key=${KEY}`;\n\n    try {\n        const response = await axios.get(MOVIE_DETAILS_URL);\n        return response.data;\n    } catch (error) {\n        alert(\"Oops, something went wrong...\")\n    }\n};\n\nexport const getMovieCredits = async (id) => {\n    const MOVIE_CREDITS_URL = `${BASE_URL}/movie/${id}/credits?api_key=${KEY}`;\n\n    try {\n        const response = await axios.get(MOVIE_CREDITS_URL);\n        return response.data.cast;\n    } catch (error) {\n        alert(\"Oops, something went wrong...\")\n    }\n};\n\nexport const getMovieReview = async (id) => {\n    const MOVIE_REVIEW_URL = `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`;\n    \n    try {\n        const response = await axios.get(MOVIE_REVIEW_URL);\n        return response.data.results;\n    } catch (error) {\n        alert(\"Oops, something went wrong...\")\n    }\n};","import { getTrendingMovies } from 'components/Api';\nimport { useEffect, useState } from 'react';\nimport { TrendListItem } from './TrendListItem';\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\nconst [error, setError]=useState(null);\n  useEffect(() => {\n    getTrendingMovies().then(data => setMovies(data.results)).catch(error => setError(error.message))\n  }, []);\n  return (\n    <div>\n      {error!==null && (\n        <p>Oops, something went wrong... Error: {error}</p>\n      )}\n      <ul>\n        {Array.isArray(movies) && movies.length > 0 &&\n          movies.map(movie => <TrendListItem movie={movie} key={movie.id} />)}\n      </ul>\n    </div>\n  );\n};\nexport default Home;\n","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\nexport const StyledListItem = styled.li`\n    list-style: none;\n    display:flex;\n`\nexport const StyledLink = styled(Link)`\n    text-decoration:none;\n    color: #111111;\n    transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) ;\n    &:hover{\n    color: #e5990c;\n    }\n`","import {  useLocation } from 'react-router-dom';\nimport { StyledListItem,StyledLink  } from './Home.styled';\nimport PropTypes from \"prop-types\";\nexport const TrendListItem = ({ movie }) => {\n  const location = useLocation();\n  return (\n    <StyledListItem>\n      <StyledLink state={{from: location}} to={'/movies/' + movie.id}>\n        <img\n          src={'http://image.tmdb.org/t/p/w500/' + movie.poster_path}\n          alt={movie.title}\n          width={100}\n          height={150}\n        />\n        {movie.title}\n      </StyledLink>\n    </StyledListItem>\n  );\n};\nTrendListItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number,\n    poster_path: PropTypes.string,\n    title: PropTypes.string\n  })\n}"],"names":["KEY","BASE_URL","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","TRENDING_URL","response","wrap","_context","prev","next","concat","axios","sent","abrupt","data","t0","alert","stop","apply","arguments","getQuerry","_ref2","_callee2","query","QUERRY_URL","_context2","_x","getMovieDetails","_ref3","_callee3","id","MOVIE_DETAILS_URL","_context3","_x2","getMovieCredits","_ref4","_callee4","MOVIE_CREDITS_URL","_context4","cast","_x3","getMovieReview","_ref5","_callee5","MOVIE_REVIEW_URL","_context5","results","_x4","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","error","setError","useEffect","then","catch","message","_jsxs","children","_jsx","Array","isArray","length","map","movie","TrendListItem","StyledListItem","styled","_templateObject","_taggedTemplateLiteral","StyledLink","Link","_templateObject2","location","useLocation","state","from","to","src","poster_path","alt","title","width","height"],"sourceRoot":""}